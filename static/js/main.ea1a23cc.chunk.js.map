{"version":3,"sources":["Controllers/Redux/authslice.js","Views/login/login.jsx","App.js","Controllers/Redux/bugslice.js","Controllers/bugcontroller.js","Controllers/Redux/userslice.js","index.js"],"names":["slice","createSlice","name","initialState","admin","Loggedin","reducers","signIn","state","action","payload","password","console","log","signOut","createUser","actions","dispatch","useDispatch","useState","formInput","setFormInput","inputchanged","e","target","value","className","placeholder","onChange","type","onclick","preventDefault","App","auth","useSelector","getBugs","data","push","bugmodel","_id","deatils","steps","version","assigned","creator","priority","time","sort","a","b","retrieveBugs","createBugs","updateBug","markcomplete","getUser","reducer","combineReducers","authReducer","bug","bugReducer","user","useReducer","store","configureStore","ReactDOM","render","document","getElementById"],"mappings":"+NAEMA,EAAQC,YAAY,CACxBC,KAAM,OACNC,aAAc,CACZC,OAAO,EACPC,UAAU,GAEZC,SAAU,CACRC,OAAQ,SAACC,EAAOC,GACd,MAA2BA,EAAOC,QAAlC,EAAQR,KAAR,EAAcS,SACdH,EAAMH,UAAW,EACjBG,EAAMJ,OAAQ,EACdQ,QAAQC,IAAIL,IAEdM,QAAS,SAACN,GACRA,EAAMH,UAAW,EACjBG,EAAMJ,OAAQ,GAEhBW,WAAY,SAACP,EAAOC,QAGTT,IAAf,QACO,EAAwCA,EAAMgB,QAAtCT,EAAR,EAAQA,O,GAAR,EAAgBO,QAAhB,EAAyBC,W,YClBjB,aACb,IAAME,EAAWC,cAEjB,EAAkCC,mBAAS,CACzCjB,KAAM,GACNS,SAAU,KAFZ,mBAAOS,EAAP,KAAkBC,EAAlB,KAKA,SAASC,EAAaC,GACpBF,EAAa,2BACRD,GADO,kBAETG,EAAEC,OAAOtB,KAAOqB,EAAEC,OAAOC,SAS9B,OACE,qBAAKC,UAAU,UAAf,SACE,uBAAMA,UAAU,cAAhB,UACE,wCACA,uBACExB,KAAK,OACLyB,YAAY,OACZC,SAAUN,EACVG,MAAOL,EAAUlB,OAEnB,uBACEA,KAAK,WACL2B,KAAK,WACLF,YAAY,WACZC,SAAUN,EACVG,MAAOL,EAAUT,WAEnB,wBAAQkB,KAAK,SAASC,QAtB5B,SAAgBP,GACdN,EAASV,EAAOa,IAChBG,EAAEQ,kBAoBE,yBC/BOC,MALf,WACE,IAAQC,EAASC,aAAY,SAAC1B,GAAD,OAAWA,KAAhCyB,KACR,OAAO,mCAAIA,EAAK5B,SAAuB,uCAAZ,cAAC,EAAD,O,wBCL7B,IAAML,EAAQC,YAAY,CACxBC,KAAM,MACNC,aAAc,GACdG,SAAU,CACR6B,QAAS,SAAC3B,GAAD,OCLN,WACL,IAAI4B,EAAO,GAgCX,OA9BAA,EAAKC,KACH,IAAIC,IAAS,CACXC,IAAK,QACLrC,KAAM,WACNsC,QAAS,uBACTC,MAAO,mCACPC,QAAS,SACTC,SAAU,gBACVC,QAAS,gBACTC,SAAU,EACVC,KAAM,UAGVV,EAAKC,KACH,IAAIC,IAAS,CACXC,IAAK,QACLrC,KAAM,WACNsC,QAAS,uBACTC,MAAO,mCACPC,QAAS,SACTC,SAAU,gBACVC,QAAS,gBACTC,SAAU,EACVC,KAAM,UAIGV,EAAKW,MAAK,SAACC,EAAGC,GACzB,OAAOD,EAAEH,SAAWI,EAAEJ,YD1BFK,IAEpBC,WAAY,SAAC3C,EAAOQ,KACpBoC,UAAW,SAAC5C,EAAOQ,KACnBqC,aAAc,SAAC7C,EAAOC,QAGXT,IAAf,QACO,EAAyDA,EAAMgB,QEbhEhB,GFaC,EAAQmC,QAAR,EAAiBgB,WAAjB,EAA6BC,UAA7B,EAAwCC,aEbjCpD,YAAY,CACxBC,KAAM,OACNC,aAAc,CAAC,IACfG,SAAU,CACRgD,QAAS,SAAC9C,GACRA,EAAM6B,KAAK,CAAEnC,KAAM,kBACnBM,EAAM6B,KAAK,CAAEnC,KAAM,oBAIVF,IAAf,QCCMuD,GDAqBvD,EAAMgB,QAAlBsC,QCACE,YAAgB,CAC9BvB,KAAMwB,EACNC,IAAKC,EACLC,KAAMC,KAGFC,EAAQC,YAAe,CAC3BR,YAGFS,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.ea1a23cc.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    admin: false,\r\n    Loggedin: false\r\n  },\r\n  reducers: {\r\n    signIn: (state, action) => {\r\n      const { name, password } = action.payload;\r\n      state.Loggedin = true;\r\n      state.admin = true;\r\n      console.log(state);\r\n    },\r\n    signOut: (state) => {\r\n      state.Loggedin = false;\r\n      state.admin = false;\r\n    },\r\n    createUser: (state, action) => {}\r\n  }\r\n});\r\nexport default slice.reducer;\r\nexport const { signIn, signOut, createUser } = slice.actions;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { signIn } from \"../../Controllers/Redux/authslice\";\r\nimport \"./login.css\";\r\n\r\nexport default () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [formInput, setFormInput] = useState({\r\n    name: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  function inputchanged(e) {\r\n    setFormInput({\r\n      ...formInput,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  function submit(e) {\r\n    dispatch(signIn(formInput));\r\n    e.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div className=\"loginbg\">\r\n      <form className=\"login-panel\">\r\n        <h1>login:</h1>\r\n        <input\r\n          name=\"name\"\r\n          placeholder=\"Name\"\r\n          onChange={inputchanged}\r\n          value={formInput.name}\r\n        ></input>\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={inputchanged}\r\n          value={formInput.password}\r\n        ></input>\r\n        <button type=\"submit\" onclick={submit}>\r\n          login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Login from \"./Views/login/login\";\n\n//import './App.css';\n\nfunction App() {\n  const { auth } = useSelector((state) => state);\n  return <>{!auth.Loggedin ? <Login /> : <h1>hello</h1>}</>;\n}\n\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { retrieveBugs } from \"../bugcontroller\";\r\n\r\nconst slice = createSlice({\r\n  name: \"bug\",\r\n  initialState: [],\r\n  reducers: {\r\n    getBugs: (state) => retrieveBugs(),\r\n\r\n    createBugs: (state, actions) => {},\r\n    updateBug: (state, actions) => {},\r\n    markcomplete: (state, action) => {}\r\n  }\r\n});\r\nexport default slice.reducer;\r\nexport const { getBugs, createBugs, updateBug, markcomplete } = slice.actions;\r\n","import bugmodel from \"../Models/bugmodel\";\r\n\r\nexport function retrieveBugs() {\r\n  let data = [];\r\n\r\n  data.push(\r\n    new bugmodel({\r\n      _id: 1234567,\r\n      name: \"unknown1\",\r\n      deatils: \"unknown1 information\",\r\n      steps: \"click and it will do some action\",\r\n      version: \"v17.17\",\r\n      assigned: \"hrtiwik verma\",\r\n      creator: \"hrits project\",\r\n      priority: 1,\r\n      time: \"9:11\"\r\n    })\r\n  );\r\n  data.push(\r\n    new bugmodel({\r\n      _id: 1234567,\r\n      name: \"unknown2\",\r\n      deatils: \"unknown1 information\",\r\n      steps: \"click and it will do some action\",\r\n      version: \"v17.17\",\r\n      assigned: \"hrtiwik verma\",\r\n      creator: \"hrits project\",\r\n      priority: 2,\r\n      time: \"9:12\"\r\n    })\r\n  );\r\n\r\n  let sorted = data.sort((a, b) => {\r\n    return a.priority - b.priority;\r\n  });\r\n  return sorted;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst slice = createSlice({\r\n  name: \"user\",\r\n  initialState: [{}],\r\n  reducers: {\r\n    getUser: (state) => {\r\n      state.push({ name: \"hritwik verma\" });\r\n      state.push({ name: \"hrits user\" });\r\n    }\r\n  }\r\n});\r\nexport default slice.reducer;\r\nexport const { getUser } = slice.actions;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import './index.css';\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n//import reportWebVitals from './reportWebVitals';\n//redux configure\n\nimport authReducer from \"./Controllers/Redux/authslice\";\nimport bugReducer from \"./Controllers/Redux/bugslice\";\nimport useReducer from \"./Controllers/Redux/userslice\";\n\nconst reducer = combineReducers({\n  auth: authReducer,\n  bug: bugReducer,\n  user: useReducer\n});\n\nconst store = configureStore({\n  reducer\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}